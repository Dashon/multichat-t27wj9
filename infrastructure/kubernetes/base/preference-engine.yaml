# Version: v1.0.0
# Kubernetes base configuration for Preference Engine service
# Handles user preference learning, pattern recognition, and personalization

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: preference-engine
  namespace: ai-enhanced-chat
  labels:
    app: preference-engine
    component: backend
    tier: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: preference-engine
  template:
    metadata:
      labels:
        app: preference-engine
        component: backend
        tier: service
    spec:
      containers:
      - name: preference-engine
        image: preference-engine:latest  # Will be overridden in overlays
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: preference-engine-config
        - secretRef:
            name: preference-engine-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
        - name: temp-storage
          mountPath: /app/temp
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: preference-engine-models
      - name: temp-storage
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000

---
apiVersion: v1
kind: Service
metadata:
  name: preference-engine
  namespace: ai-enhanced-chat
  labels:
    app: preference-engine
    component: backend
    tier: service
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: preference-engine

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: preference-engine
  namespace: ai-enhanced-chat
  labels:
    app: preference-engine
    component: backend
    tier: service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: preference-engine
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: preference-engine-models
  namespace: ai-enhanced-chat
  labels:
    app: preference-engine
    component: backend
    tier: service
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2