# AI Orchestrator Service Kubernetes Configuration
# Version: 1.0
# Dependencies:
# - kubernetes v1.25+
# - nvidia-device-plugin v0.14+

---
# AI Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: default
  labels:
    app.kubernetes.io/name: ai-service
    app.kubernetes.io/part-of: chat-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
spec:
  replicas: 2  # Initial replicas, will scale 2-8 based on GPU utilization
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ai-service
        app.kubernetes.io/part-of: chat-platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: ai-service
        image: ai-service-image:latest  # From Dockerfile.ai
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "2"
            memory: "4Gi"
            nvidia.com/gpu: "1"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: WORKERS
          value: "4"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu
                operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ai-service
              topologyKey: kubernetes.io/hostname

---
# AI Service Service
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: default
  labels:
    app.kubernetes.io/name: ai-service
    app.kubernetes.io/part-of: chat-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: ai-service
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  internalTrafficPolicy: Local
  topologyKeys:
  - "kubernetes.io/hostname"
  - "*"

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-service-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: nvidia.com/gpu
      target:
        type: Utilization
        averageUtilization: 60

---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-service-pdb
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ai-service